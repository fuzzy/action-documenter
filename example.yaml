name: Deploy Lambda

on:
  workflow_call:
    inputs:
      artifact:
        description: The name of the lambda artifact to upload.
        type: string
        default: lambda
      function-name:
        description: Name of the Lambda Function
        type: string
        required: true
      function-role:
        description: Name of AWS IAM role the lambda should executre as.
        type: string
        required: true
      description:
        description: Description of Lambda
        type: string
        required: true
      handler:
        description: Lambda file.entrypoint
        type: string
        default: index.handler
      runtime:
        description: The Lambda's runtime. E.g. python3.8, nodejs14.x, go1.x, dotnetcore3.1, etc
        type: string
        required: true
      timeout:
        description: The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds.  The  maximum  allowed value is 900 seconds. For more information, see Lambda execution en- vironment .
        type: number
        default: 3
      memory:
        description: The amount of memory available to the function at runtime.  Increasing  the  function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
        type: number
        default: 128
      publish:
        description: Set to true to publish the first version of the function during creation/update.
        type: boolean
        default: false
      subnets:
        description: Attach lambda to one of these subnets. NOTE This is not usually required.
        type: string
        required: false
      security-groups:
        description: List security-groups to attach to the Lambda when launching on a VPC.
        type: string
        required: false
      deployment-role:
        description: AWS IAM Role to assume when deploying the lambda
        type: string
        required: true
      aws-region:
        description: AWS Region to deploy the Lambda to.
        type: string
        default: us-west-2
    secrets:
      token:
        description: Auth token to use, default to github.token
        required: false

env:
  GITHUB_TOKEN: ${{ secrets.token == '' && secrets.token || github.token }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - id: lambda
      run: |
        lambda_update=false
        if aws lambda get-function --function-name '${{ inputs.function-name }}' --region '${{ needs.config.outputs.aws-region }}' > /dev/null 2>&1; then
          lambda_update=true
        fi
        echo "update=${lambda_update}" >> "${GITHUB_OUTPUT}"

    - id: create
      if: ${{ steps.lambda.outputs.update != 'true' }}
      run: |
        : Create Lambda
        set --
        set -- "$@" --handler '${{ inputs.handler }}'
        set -- "$@" --region '${{ needs.config.outputs.aws-region }}'
        set -- "$@" --function-name '${{ inputs.function-name }}'
        set -- "$@" --zip-file 'lambda.zip'
        set -- "$@" --runtime '${{ inputs.runtime }}'
        set -- "$@" --timeout '${{ inputs.timeout }}'
        set -- "$@" --memory-size '${{ inputs.memory }}'
        set -- "$@" --role '${{ inputs.function-role }}'
        set -- "$@" --description '${{ inputs.description }}'
        set -- "$@" ${{ inputs.publish && '--publish' || '--no-publish' }}
        aws lambda create-function "$@"

    - id: update-code
      if: ${{ steps.lambda.outputs.update == 'true' }}
      run: |
        : Update Lambda Code
        set --
        set -- "$@" --region '${{ needs.config.outputs.aws-region }}'
        set -- "$@" --function-name '${{ inputs.function-name }}'
        set -- "$@" --zip-file 'lambda.zip'
        set -- "$@" ${{ inputs.publish && '--publish' || '--no-publish' }}
        aws lambda update-function-code "$@"

    - id: update-config
      if: ${{ steps.lambda.outputs.update }}
      run: |
        : Update Lambda Config
        set --
        set -- "$@" --handler '${{ inputs.handler }}'
        set -- "$@" --region '${{ needs.config.outputs.aws-region }}'
        set -- "$@" --function-name '${{ inputs.function-name }}'
        set -- "$@" --runtime '${{ inputs.runtime }}'
        set -- "$@" --timeout '${{ inputs.timeout }}'
        set -- "$@" --memory-size '${{ inputs.memory }}'
        set -- "$@" --role '${{ inputs.function-role }}'
        set -- "$@" --description '${{ inputs.description }}'
        aws lambda update-function-configuration "$@"
